{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsMoviesIn",
						"type": "DatasetReference"
					},
					"name": "DFCopyMovies"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dsMoviesOut",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "dsMoviesOut",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "YearExtract"
				},
				{
					"name": "MoviesByYear"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DFCopyMovies",
				"DFCopyMovies derive(Year = toInteger(trim(right(title, 6), '()')),",
				"          title = toString(left(title, length(title)-6))) ~> YearExtract",
				"YearExtract aggregate(groupBy(Year),",
				"     MoviesCount = count()) ~> MoviesByYear",
				"YearExtract sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['movies-clean.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"MoviesByYear sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['mvoies-by-year.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}